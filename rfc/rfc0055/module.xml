<?xml version="1.0" encoding="UTF-8"?>
<section anchor="module" title="&lt;xar:module /&gt;">
  <t>
    The module tag produces output generated by a module.
    When the 'main' attribute is true, this tag acts as a placeholder for
    the output of the main module function, and the module
    gets all variables needed directly from the core. The main
    module function itself is at this moment executed by the core
    *before* template loading.
  </t>
  <t>
    On the other hand, if a module and optional other
    attributes are specified, this tag will call the
    corresponding module function during the template loading,
    and insert its output here.
  </t>
  <section title="Forms">
    <t>Only empty form is allowed</t>
  </section>
  <section title="Attributes">
    <t>
      <list >
        <t><spanx>[id]</spanx>
        <t>an identifier for the tag</t>
        </t>
        <t><spanx>main</spanx> {true|false}
        <t>Boolean specifying whether this is for the main module output or not.
        The attribute is required, but the actual value isn't used. See below.
        </t>
        <t>Note: this attribute is likely to be deprecated, because it is redundant,
        the presence / absence of the module attribute is enough to decided whether
        the default module should be used or not. At this point, the 'main' attribute
        is required, but the code actually checks the presence of the 'module'
        attribute to decide what to do. If this attribute is not specified the rest of
        the attributes is ignored, and the main module output is used.
        </t>
        </t>
        <t><spanx>[module]</spanx>
        <t>Name of the module to call, if it is not the main module.</t>
        </t>
        <t><spanx>[type]</spanx> (user)
        <t>The type of function to call, if this attribute isn't specified the value
        defaults to 'user'
        </t>
        </t>
        <t><spanx>[func]</spanx> (main)
        <t>Name of the function to call. The value defaults to 'main' if not
        specified.
        </t>
        </t>
        <t><spanx>[args]</spanx>
        <t>array of arguments to pass to the function, or</t>
        </t>
        <t><spanx>[any other attribute]</spanx>
        <t>Individual arguments to pass to the function. This means if you specify
        param="4", test="yes", the attributes are translated by blocklayout into an
        argument array and passed to the function. In this example:
        <artwork>
          array('param' => '4', 'test' => 'yes)
        </artwork>
        would be passed to the function
        </t>
        </t>
      </list>
    </t>
  </section>
  <section title="Syntax examples">
    <t>
      <artwork>
        &lt;xar:module main="true" /&gt;
        
        Main module output will be used (not because main="true" but because module isn't specified.
        
        &lt;xar:module main="false" module="polls" /&gt;
        
        The 'main' function from the 'polls' module will be called from the 'user' part of the module
        
        &lt;xar:module main="false" module="$mymodule" type="user" func="$func" args="$args" /&gt;
        
        The value of $func, $mymodule and $args will be used to determine the module to use, which
        function to call and which arguments to pass. The function is looked up in the 'user' section
        of the module. Note that the 'type' attribute in this case is redundant.
        
        &lt;xar:module main="false" module="articles" type="user" func="view" ptid="1" numitems="10" startnum="$startnum" /&gt;
        
        From the 'articles' module, the 'user' 'view' function is called, with parameters ptid,numitems and startnum
      </artwork>
    </t>
  </section>
  <section title="Context">
    <t>Parent tag: none.</t>
    <t>Child tags: none</t>
  </section>
</section>
