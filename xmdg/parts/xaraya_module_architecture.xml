<?xml version="1.0" encoding="UTF-8"?>
<chapter>
  <title>Xaraya Module Architecture</title>

  <!--Maintained by:-->

  <!--Status:-->

  <para>The Xaraya module system design allows for the maximum flexibility to
  developers whilst ensuring that the module can be accessed in a generic
  fashion by the Xaraya core, other modules, and remote systems given access
  through other interfaces such as XML-RPC. The main design characteristics of
  the module system are listed below</para>

  <section>
    <title>Separation of User and Administrator Functions</title>

    <para></para>
  </section>

  <section>
    <title>Separation of Display and Operational Functions</title>

    <para></para>
  </section>

  <section>
    <title>Single Directory Installation - Structure</title>

    <para></para>
  </section>

  <section>
    <title>Standard Module Functions</title>

    <para></para>
  </section>

  <section>
    <title>Variable handling</title>

    <para></para>
  </section>

  <section>
    <title>Templates</title>

    <para></para>
  </section>

  <section>
    <title>Installing, activating and upgrading</title>

    <para></para>
  </section>

  <section>
    <title>Special Functions for Content Modules</title>

    <para></para>
  </section>

  <section>
    <title>Special compontents for Utility Modules</title>

    <para></para>
  </section>

  <section>
    <title>Interacting with other Xaraya components</title>

    <para></para>
  </section>
</chapter>
<!-- Old content to revive or delete:

  <chapter>
    <title>Xaraya Module Design</title>

    <para>The Xaraya module system design allows for the maximum flexibility
    to developers whilst ensuring that the module can be accessed in a generic
    fashion by the Xaraya core, other modules, and remote systems given access
    through other interfaces such as XML-RPC. The main design characteristics
    of the module system are listed below.</para>

    <section>
      <title>Separations</title>

      <para>Xaraya modules use a clear separation of functions according to
      what they do.</para>

      <section>
        <title>User and Administrator Functions</title>

        <para>Separation of user and administrator functions allows for a much
        cleaner module. It speeds up the responsiveness of the module in the
        most-often used cases (i.e. user actions) as the module only needs to
        load the code that is required of it. It allows for work one area of
        the code (e.g. an admin GUI redesign) to take place without affecting
        the other areas. In addition, it gives an extra layer of security to
        help ensure that privileged functions cannot be executed inadvertently
        from user areas.</para>

        <para>The discussion of what is an admin function and what is a user
        function is sometimes vague. In general, admin functions are those
        function that deal with setting up the module and it's functioning,
        sometimes including the data in there. In Example module, that is a
        display module for users, it is an admin task to add data. This is
        also in accordance with Articles.</para>
      </section>

      <section>
        <title>Display and Operational Functions</title>

        <para>Separation of display and operational functions allows for areas
        within and without Xaraya to use the functionality supplied by a
        module. This is most obvious in the case of modules with blocks. Where
        the block might display its own information but use the module
        functions to gather that information. Other modules where this is
        hugely important are the utility modules; things like comments and
        rating systems, that have no real use on their own but can be coupled
        with other modules to provide generic and site-wide functionality at
        very little cost to the module developer.</para>

        <para>Operational functions go into the xar...api directory. These
        functions will not call a template at return, but are expected to
        return the result of their operation. Functions that will display data
        will always go in xaradmin or xaruser directories. The exception here
        is blocks, that are placed in xarblocks/.</para>
      </section>
    </section>

    <section>
      <title>Single Directory Installation</title>

      <para>Having a single install directory allows for much easier
      maintenance of large Xaraya systems, and far easier install and removal
      of modules both for the module developer and for the site administrator.
      Dependencies of the layout on the file system are no longer required,
      and as such, the module designer does not need to worry about on which
      systems his module might be deployed, and how it needs to interact with
      the underlying operating system to function correctly.</para>

      <para>This design option means that all your functions and data will go
      in the directory modules/yourmodule and the according child
      directory.</para>
    </section>

    <section>
      <title>External Access to Module Functions</title>

      <para>Allowing access to module functions from external (i.e.
      non-Xaraya) systems is a very desirable thing to do. By allowing this,
      the Xaraya system becomes a content repository, where information can be
      accessed in ways other than through the standard web interface. An
      example of this power can be seen through use of the XML-RPC interface
      that is provided with Xaraya and which allow for such tools as the
      Google API to be used, or other webservice events.</para>
    </section>

    <section>
      <title>Module Directory Structure</title>

      <para>Xaraya modules have a very specific directory structure. This
      allows the Xaraya system to use a generic system to access all modules
      without needing to know specific information about each separate module
      that is built. Following the directory structure as laid out below is an
      absolute requirement of any Xaraya-compliant module. Extra files and
      directories in addition to those shown below are allowed. In addition,
      if any of the files below are not required (e.g. the module does not
      have database tables of its own so it does not require the xartables.php
      file) then they do not need to exist. However, files that perform the
      functions outlined below must comply with the file naming convention to
      allow the Xaraya system to load the suitable files at the appropriate
      times to ensure correct operation of the module. This shows the layout
      of the example module directory. Other modules will have different names
      for their top-level directory and blocks as appropriate for their
      specific functionality.</para>

      <orderedlist>
        <listitem>
          <para><link linkend="dir1">modules/ (1)</link></para>

          <orderedlist continuation="continues">
            <listitem>
              <para><link linkend="dir2">example/ (2)</link></para>

              <orderedlist continuation="continues">
                <listitem>
                  <para><link linkend="dir3">xaradmin/ (3)</link></para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>create.php</para>
                    </listitem>

                    <listitem>
                      <para>delete.php</para>
                    </listitem>

                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>main.php</para>
                    </listitem>

                    <listitem>
                      <para>modify.php</para>
                    </listitem>

                    <listitem>
                      <para>modifyconfig.php</para>
                    </listitem>

                    <listitem>
                      <para>new.php</para>
                    </listitem>

                    <listitem>
                      <para>update.php</para>
                    </listitem>

                    <listitem>
                      <para>updateconfig.php</para>
                    </listitem>

                    <listitem>
                      <para>view.php</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xaradminapi/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>create.php</para>
                    </listitem>

                    <listitem>
                      <para>delete.php</para>
                    </listitem>

                    <listitem>
                      <para>getmenulinks.php</para>
                    </listitem>

                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>menu.php</para>
                    </listitem>

                    <listitem>
                      <para>update.php</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xarblocks/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>first.php</para>
                    </listitem>

                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>modify-first.php</para>
                    </listitem>

                    <listitem>
                      <para>modify-others.php</para>
                    </listitem>

                    <listitem>
                      <para>others.php</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xarimages/</para>

                  <itemizedlist>
                    <listitem>
                      <para>index.html</para>
                    </listitem>
                  </itemizedlist>
                </listitem>

                <listitem>
                  <para>xarproperties/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>Dynamic_Example_Property.php</para>
                    </listitem>

                    <listitem>
                      <para>index.html</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xarstyles/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>style.css</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xartemplates/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>blocks/</para>

                      <itemizedlist>
                        <listitem>
                          <para>first.xd</para>
                        </listitem>

                        <listitem>
                          <para>index.html</para>
                        </listitem>

                        <listitem>
                          <para>modify-first.xd</para>
                        </listitem>

                        <listitem>
                          <para>modify-others.xd</para>
                        </listitem>

                        <listitem>
                          <para>others.xd</para>
                        </listitem>
                      </itemizedlist>
                    </listitem>

                    <listitem>
                      <para>includes/</para>

                      <orderedlist continuation="continues">
                        <listitem>
                          <para>index.html</para>
                        </listitem>

                        <listitem>
                          <para>user-menu.xd</para>
                        </listitem>
                      </orderedlist>
                    </listitem>

                    <listitem>
                      <para>properties/</para>

                      <orderedlist continuation="continues">
                        <listitem>
                          <para>index.html</para>
                        </listitem>

                        <listitem>
                          <para>showinput-example.xd</para>
                        </listitem>

                        <listitem>
                          <para>showoutput.xd</para>
                        </listitem>

                        <listitem>
                          <para>validation-example.xd</para>
                        </listitem>
                      </orderedlist>
                    </listitem>
                  </orderedlist>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>admin-delete.xd<indexterm>
                          <primary>templates</primary>
                        </indexterm></para>
                    </listitem>

                    <listitem>
                      <para>admin-main.xd<indexterm>
                          <primary>templates</primary>
                        </indexterm></para>
                    </listitem>

                    <listitem>
                      <para>admin-modify.xd</para>
                    </listitem>

                    <listitem>
                      <para>admin-modifyconfig.xd</para>
                    </listitem>

                    <listitem>
                      <para>admin-new.xd</para>
                    </listitem>

                    <listitem>
                      <para>admin-view.xd</para>
                    </listitem>

                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>user-display.xd</para>
                    </listitem>

                    <listitem>
                      <para>user-main.xd</para>
                    </listitem>

                    <listitem>
                      <para>user-menu.xd</para>
                    </listitem>

                    <listitem>
                      <para>user-search.xd</para>
                    </listitem>

                    <listitem>
                      <para>user-usermenu_form.xd</para>
                    </listitem>

                    <listitem>
                      <para>user-usermenu_icon.xd</para>
                    </listitem>

                    <listitem>
                      <para>user-view.xd</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xartests/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>testexample.php</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xaruser/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>display.php</para>
                    </listitem>

                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>main.php</para>
                    </listitem>

                    <listitem>
                      <para>search.php</para>
                    </listitem>

                    <listitem>
                      <para>usermenu.php</para>
                    </listitem>

                    <listitem>
                      <para>view.php</para>
                    </listitem>
                  </orderedlist>
                </listitem>

                <listitem>
                  <para>xaruserapi/</para>

                  <orderedlist continuation="continues">
                    <listitem>
                      <para>countitems.php</para>
                    </listitem>

                    <listitem>
                      <para>decode_shorturl.php</para>
                    </listitem>

                    <listitem>
                      <para>encode_shorturl.php</para>
                    </listitem>

                    <listitem>
                      <para>get.php</para>
                    </listitem>

                    <listitem>
                      <para>getall.php</para>
                    </listitem>

                    <listitem>
                      <para>getitemlinks.php</para>
                    </listitem>

                    <listitem>
                      <para>getitemtypes.php</para>
                    </listitem>

                    <listitem>
                      <para>getmenulinks.php</para>
                    </listitem>

                    <listitem>
                      <para>index.html</para>
                    </listitem>

                    <listitem>
                      <para>menu.php</para>
                    </listitem>

                    <listitem>
                      <para>search.php</para>
                    </listitem>

                    <listitem>
                      <para>validateitem.php</para>
                    </listitem>
                  </orderedlist>
                </listitem>
              </orderedlist>
            </listitem>
          </orderedlist>

          <orderedlist continuation="continues" inheritnum="inherit">
            <listitem>
              <para>example.wsdl</para>
            </listitem>

            <listitem>
              <para>index.html</para>
            </listitem>

            <listitem>
              <para>xareventapi.php</para>
            </listitem>

            <listitem>
              <para>xarinit.php</para>
            </listitem>

            <listitem>
              <para>xartables.php</para>
            </listitem>

            <listitem>
              <para>xarversion.php</para>
            </listitem>
          </orderedlist>
        </listitem>
      </orderedlist>

      <para>(1<anchor id="dir1" />) The top-level directory in Xaraya for
      modules</para>

      <para>(2<anchor id="dir2" />) The directory that contains all of the
      module code (in this case the module is named 'example')</para>

      <para>(3<anchor id="dir3" />) The directory that contains all
      administrative GUI functions for the module</para>

      <para>(4) create.php This a standard function that is called with the
      results of the form supplied by xarModFunc(‘example’,’admin’,’new’) to
      create a new item. Syntax: @param string $’name’ – The name of the item
      to be created @param int $’number’ – The number of the item to be
      created</para>

      <para>(5) delete.php This standard function is called whenever an
      administrator wishes to delete a current module item. Note that this
      function is the equivalent of both the modify() and update() functions
      as it operates a form and processes its output. This is fine for simpler
      functions, but for complex operations such as creation and modification
      it is generally easier to separate them into separate functions. There
      is no requirement in the Xaraya MDG to use one or the other, so either
      or both can be used as seen appropriate by the module developer. Syntax:
      @param int $’exid’ - The id of the item to be deleted @param string
      $’confirm’ – Confirm that this item can be deleted</para>

      <para>(6) main.php This function is the default function, and is called
      whenever the module is initiated without defining arguments. As such, it
      can be used for a number of things, but most commonly, it either shows
      the module menu and returns or calls whatever the module designer feels
      should be the default function. (This is often the view function)</para>

      <para>(7) modify.php This is a standard admin function that is called
      whenever an administrator whishes to modify a current module item.
      Syntax: @param int $’exid’ the id of the item to be modified</para>

      <para>(8) modifyconfig.php This is the standard function to modify the
      configuration parameters for the module. (9) new.php This standard
      function is called whenever the administrator wishes to create a new
      module item.</para>

      <para>(10) update.php This is the standard function that is called with
      the results of the form supplied by xarModFunc(‘example’,
      ‘admin’,’modify’) to update a current item. Syntax: @param int $ ‘exid’
      – The id of the item to be updated @param string $ ‘name’ – The name of
      the item to be updated @param int $ ‘number’ – The number of the item to
      be updated</para>

      <para>(11) updateconfig.php This standard function updates the
      configuration parameters of the module given the information passed back
      by the modification form.</para>

      <para>(12) view.php This standard function is called whenever the
      administrator wishes to view a module item.</para>

      <para>(13) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url.</para>

      <para>(14) xaradminapi The directory that contains all administrative
      database functions for the module.</para>

      <para>(15) create.php This standard function creates an item when the
      administrator wants to create an item in the database. Parameters are
      passed from the xaradmin/create.php. This function returns the example
      item upon success, or raises an exception error upon failing. Syntax:
      @param $args ['exid'] the ID of the item @param $args [‘name’] name of
      the item @param $args[‘number’] number of the item Returns the example
      item ID as integer on success, returns false on failure and raises
      BAD_PARAM, NO_PERMISSION, DATABASE_ERROR</para>

      <para>(16) delete.php This standard function deletes an item in the
      database. Parameters are passed from the xaradmin/delete.php. This
      function returns true upon success, or raises an exception error upon
      failing. Syntax: @param $args [‘exid’] name of the item Returns the
      example item ID as integer on success, returns false on failure and
      raises BAD_PARAM, NO_PERMISSION, DATABASE_ERROR</para>

      <para>(17) getmenulinks.php This is a utility function that passes
      individual menu items to the main menu. Returns array containing the
      menulinks for the admin menu items. (18) menu.php This function
      generates the common admin menu configuration</para>

      <para>(19) update.php This standard function updates an item when the
      administrator wants to change an item in the database. Parameters are
      passed from the xaradmin/update.php. This function returns the example
      item upon success, or raises an exception error upon failing. Syntax:
      @param $args ['exid'] the ID of the item @param $args [‘name’] name of
      the item @param $args[‘number’] number of the item Returns the example
      item ID as integer on success, returns false on failure and raises
      BAD_PARAM, NO_PERMISSION, DATABASE_ERROR</para>

      <para>(20) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url. (21) xarblocks/ This directory contains the files for generating
      blocks for the module.</para>

      <para>(22) first.php This is the code for the example block for the
      example module.</para>

      <para>(23) others.php This is the code for the example block for the
      example module.</para>

      <para>(24) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url.</para>

      <para>(25) xarimages/ This directory contains image files that are
      associated with the example module.</para>

      <para>(26) admin.gif This is the image that is displayed in the example
      module administration overview.</para>

      <para>(27) admin_generic.gif This is an optional image that can be
      displayed in the example module administration overview.</para>

      <para>(28) preferences.gif This preferences image is used in the example
      module.</para>

      <para>(29) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url.</para>

      <para>(30) xartemplates/ This directory contains the template files used
      by blocklayout for displaying pages within the example module.</para>

      <para>(31) blocks/ This directory contains the template files used by
      blocklayout to display the blocks for the example module.</para>

      <para>(32) first.xd Templates file for the first block in the example
      module.</para>

      <para>(33) firstAdmin.xd Templates file for the first block
      administration page for the example module. (34) othersAdmin.xd
      Templates file for the others block administration page for the example
      module.</para>

      <para>(35) example-firstblock-modify.xd Templates file for the first
      block administration modify settings page. (36) admin-delete.xd
      Templates file for administration delete function. (37) admin-main.xd
      Templates file for administration main function.</para>

      <para>(38) admin-menu.xd Templates file for the administration menu for
      Example module.</para>

      <para>(39) admin-modify.xd Templates file for administration modify item
      page.</para>

      <para>(40) admin-modifyconfig.xd Templates file for administration
      modify configuration page.</para>

      <para>(41) admin-new.xd Templates file for administration new item
      page.</para>

      <para>(42) admin-view.xd Templates file for administration view item
      page.</para>

      <para>(43) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url.</para>

      <para>(44) user-display.xd Templates file for the user display
      page.</para>

      <para>(45) user-main.xd Templates file for the users main page.</para>

      <para>(46) user-menu.xd Templates file for the users menu. (47)
      user-usermenu_icon.xd Template file for example user menu hook.</para>

      <para>(48) user-view.xd Templates file for the user display items
      page.</para>

      <para>(49) user-usermenu_form.xd Templates file for example hook for
      user menu.</para>

      <para>(50) xaruser/ The directory that contains all users GUI functions
      for the module.</para>

      <para>(51) display.php This standard function provides detailed
      information on a single item available from the module. Syntax: @param
      $args an array of arguments (if called by other modules) @param $args
      [‘objectid’] – A generic objected (if called by other modules) @param
      $args [‘exid’] – The item id used for this module</para>

      <para>(52) main.php This standard function is the default function, and
      is called whenever the module is initiated without defining arguments.
      As such, it can be used for a number of things, most commonly, it either
      shoes the module menu and returns or calls whatever the module designer
      feels should be the default function. (This is often the view()
      function)</para>

      <para>(53) user-menu.php This standard function is used to display the
      user menu hook.</para>

      <para>(54) view.php This standard function is used to provide an
      overview of all the items available from the module.</para>

      <para>(55) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url.</para>

      <para>(56) xaruserapi/ The directory that contains all user database
      functions for the module.</para>

      <para>(57) encode_shorturl.php The standard functions that encode module
      parameters into some virtual path that will be added to index.php, and
      decode a virtual path back to the original module parameters.</para>

      <para>(58) countitems.php This utility function counts the number of
      items held by the module. Returns the number of items as an integer type
      with the number of items held by this module.</para>

      <para>(59) decode_shorturl.php This function extracts arguments from
      short urls and passes them back to the xarGetRequestInfo() api
      function.</para>

      <para>(60) get.php This standard function retrieves a specific example
      item from the database. Syntax: @param $args [‘exid’ – Id of example
      item to get Returns item array, or false on failure Raises exceptions
      BAD_PARAM, NO_PERMISSION, DATABASE_ERROR</para>

      <para>(61) getall.php This standard function retrieves all example items
      from the database. Syntax: @param $ numitems – The number of items to
      retrieve (default -1 = all) @param $ startnum – Start with this item
      number (default 1) Returns an array of items, or false on failure Raises
      exceptions BAD_PARAM, NO_PERMISSION, DATABASE_ERROR</para>

      <para>(62) getmenulinks.php This utility function will pass individual
      menu items to the main menu. Returns an array containing the menu links
      for the main menu. (63) menu.php This standard function will generate
      the common menu configuration.</para>

      <para>(64) validateitem.php This standard function validates argument
      arrays that are passed for writing to the database.</para>

      <para>(65) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url.</para>

      <para>(66) getitemlinks.php This utility function passes individual item
      links to other calling functions Syntax: @param $args [‘itemtype’] –
      Item type (optional) @param $args [‘itemids’] – array of item ids to get
      Returns an array containing the itemlink(s) for the item(s)</para>

      <para>(67) xareventapi.php This standard function is the event handler
      for the system event ServerRequest Returns bool</para>

      <para>(68) xarinit.php This file contains the initialization, upgrade,
      and delete functions for the example module. Functions include
      example_init() – example_upgrade() – example_delete()</para>

      <para>(69) xartables.php This file contains the table definitions for
      the example module/</para>

      <para>(70) example.wsdl This file contains an example soap xml schema
      that connects and returns the number of items in the example
      database.</para>

      <para>(71) index.html This is a blank index.html file to prevent someone
      from viewing the directory contents when access this directory via a
      url.</para>

      <para>(72) xaradmin.php A depreciated file; all admin functions should
      be separated into individual files and placed into the xaradmin/
      directory.</para>

      <para>(73) xaradminapi.php A depreciated file; all adminapi functions
      should be separated into individual files and placed into the
      xaradminapi/ directory.</para>

      <para>(74) xaruser.php A depreciated file; all user functions should be
      separated into individual files and placed into the xaruser/
      directory.</para>

      <para>(75) xaruserapi.php A depreciated file; all userapi functions
      should be separated into individual files and placed into the
      xaruserapi/ directory.</para>

      <para>(76) xarversion.php This file contains the module ID number,
      author, and version information for the example module.</para>
    </section>

    <section>
      <title></title>

      <para></para>
    </section>
  </chapter>
-->