--
-- 02-conventions to use pre-commit time
--
print('--- Group 2: File conventions ---')

tabtest="No use of tab characters in files";         tablist=''
crtest="No use of win/mac line endings";             crlist=''
functest="Function declarations use one true brace"; funclist=''
classtest="Class declarations use one true brace";   classlist=''

for index,file in commit_files do
    -- skip binary files
    if (not binary_file(file)) then
        -- read in the file and see if tab chars are in it
        local f = io.open(file, "r")
        if (f~= nil) then
            local content = f:read("*all")
            f:close()
            
            -- test for tabs
            t,nroftabs = string.gsub(content,"\t","\t")
            if(nroftabs > 0) then tablist=tablist .."  "..file.." ("..nroftabs.." tabs in file)\n" end
            
            -- test for win/mac crs
            t,nrofcrs  = string.gsub(content,"\r\n?","\n")
            if(nrofcrs > 0)  then crlist=crlist.."  "..file.." ("..nrofcrs.." win/mac CRs in file)\n" end
            
            -- one true brace convention
            if(string.find(file,'%.php$')) then
                -- for function and class declarations
                line_nr=0;
                for line in io.lines(file) do
                    line_nr=line_nr+1
                    if string.find(line,'function%s+.-%(.-%)%s-{.-$') ~=nil then
                        funclist=funclist..'  '..file.." should use one true brace at line: "..line_nr..'\n'
                    end
                    if string.find(line,'class%s+.-{.-$') ~= nil then
                        classlist=classlist..'  '..file.." should use one true brace at line: "..line_nr..'\n'
                    end
                end
            end
        end
    end
end
if(tablist ~='') then failed(2.11,tabtest,tablist)   else passed(2.11,tabtest) end
if(crlist  ~='') then failed(2.13,crtest,crlist)     else passed(2.13,crtest)  end
if(funclist~='') then failed(2.18,functest,funclist) else passed(2.18,functest)  end
if(classlist~='') then failed(2.19,classtest,classlist) else passed(2.19,classtest) end