#!/bin/bash

monotone=mtn
PARSERTYPE='noneyet'
CR='\013'

# Require xmllint
if type xmllint> /dev/null 2>&1
then 
  XMLPARSER='xmllint --loaddtd --noout'
  PARSERTYPE='xmllint'
else 
  echo No valid XML parser was found on your system, can not complete this command.
  exit 1
fi

# Cater for known differences between bsd/sysv style
SYSTEM=`uname`
case $SYSTEM in
    CYGWIN*)
        # cygwin grep is broken?
        GREPPAT='\.x[d|t]'
        ;;
    *)
        GREPPAT='\.x[d|t]$'
        ;;
esac 
# Does an MT directory exist ? (path passed as $1)
mt_exists() {
    `ls $1/_MTN > /dev/null 2>&1`
    echo $?
}

# Determine the root of the current mt working dir, if any
mt_root () {
    # cd up in a subshell and break if we found an MT dir
    (   cd $1;
        while [ 1 == 1 ]; do
            MT_THERE=`mt_exists $PWD`
            if [ $MT_THERE -eq 0 ]; then
                echo $PWD; break;
            else
                cd ..
                if [ $PWD == / ]; then
                    break
                fi
            fi
        done
    )
}

# The first argument should either be a file or nothing (takes current dir and below then)
if [ $# -gt 0 ]; then
    WORKDIR=$(dirname $1)
    FILELIST=$(basename $1)
else
    WORKDIR=`mt_root $PWD`
    FILELIST=`$monotone ls known . | grep -e $GREPPAT`
fi

FAILED=0
for template in $FILELIST; do
  TEMPFILE=`mktemp tmp.XXXXXXX` || exit 1
    
  #echo '<!DOCTYPE blocklayout SYSTEM "'$CMDDIR'/xar.dtd">' >> $TEMPFILE
  TPLDIR=$(basename $(dirname $WORKDIR/$template))
  if [ $TPLDIR != 'pages' ]; then
    # normal template, add a root tag
    echo '<!DOCTYPE blocklayout PUBLIC "-//XAR//DTD BL 1.0 Strict//EN" "http://www.xaraya.com/bl1/DTD/bl1-strict.dtd">' >> $TEMPFILE
    #echo '<!DOCTYPE blocklayout SYSTEM "'$CMDDIR'/xar.dtd">' >> $TEMPFILE
    echo '<xar:blocklayout version="1.0" content="text/html" xmlns:xar="http://xaraya.com/2004/blocklayout">' >> $TEMPFILE
    cat $WORKDIR/$template >> $TEMPFILE
    echo '</xar:blocklayout>' >> $TEMPFILE
  else 
    cat $WORKDIR/$template >> $TEMPFILE
  fi
  
  RESULT=`$XMLPARSER $TEMPFILE 2>&1`
  if [ X$? != X0 ] ; then
    echo "FAILED : $template"
    if [ $PARSERTYPE = 'xmllint' ]
    then
      echo $RESULT | awk 'BEGIN {RS="^"; FS=":"} {if(NF > 1) {printf("  Line"); printf(" %s",$2-2); for(i=4;i<=NF;i++) {printf(": %s",$i)}; print ""}}'
      FAILED=1
    else
      echo $RESULT
    fi
  fi
  rm $TEMPFILE >/dev/null 2>&1
done
exit $FAILED
